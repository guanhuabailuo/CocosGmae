"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.start = void 0;
// 合并参数
function start(req, res, next) {
    // 这里处理一下传递参数的问题统一放在 req.params 上面
    if (typeof req.body == 'string')
        req.body = { __body: req.body };
    if (typeof req.query == 'string')
        req.query = { __query: req.query };
    req.params = Object.assign(req.params, req.query || {}, req.body || {});
    // res.setHeader("Content-Type", "text/html; charset=utf-8");
    for (let key in req.params)
        if (req.params[key] == "undefined" || req.params[key] == "null") {
            delete req.params[key];
        }
    envStart(this, req, res, next);
}
exports.start = start;
// 平台开始
function envStart(webHandle, req, res, next) {
    return __awaiter(this, void 0, void 0, function* () {
        let succ = yield webHandle.getEnvModule().before(req, res);
        if (!succ) {
            // 如果失败了，那么直接返回结果好了 跳过后续几个步骤
            finish(req, res, next);
        }
        else {
            // 开始路由模块启动
            globalStart(webHandle, req, res, next);
        }
    });
}
// 平台开始
function globalStart(webHandle, req, res, next) {
    return __awaiter(this, void 0, void 0, function* () {
        let succ = yield webHandle.getGlobalModule().before(req, res);
        if (!succ) {
            // 如果失败了，那么直接返回结果好了 跳过后续几个步骤
            finish(req, res, next);
        }
        else {
            // 开始路由模块启动
            route(webHandle, req, res, next);
        }
    });
}
// 每个模块的后置调用
function route(webHandle, req, res, next) {
    return __awaiter(this, void 0, void 0, function* () {
        let list = req.path.split("/");
        let name = list.pop();
        // 这里需要吸收掉多余的空
        for (let i = 0; i < list.length;) {
            if (list[i] == "") {
                list.splice(i, 1);
                continue;
            }
            i++;
        }
        let mod = list.join("/");
        let md = webHandle.getModule(mod);
        // 表示请求过程中出现意外了跳过route了
        if (yield md.before(req, res)) {
            yield md.route(name || "index", req, res, next);
            // after 调用成功的化走下一个流程
            yield md.after(req, res);
            globalAfter(webHandle, req, res, next);
        }
        else {
            globalAfter(webHandle, req, res, next);
        }
    });
}
function globalAfter(webHandle, req, res, next) {
    return __awaiter(this, void 0, void 0, function* () {
        yield webHandle.getGlobalModule().after(req, res);
        // 如果失败了，那么直接返回结果好了 跳过后续几个步骤
        envAfter(webHandle, req, res, next);
    });
}
// 每个模块的后置调用
function envAfter(webHandle, req, res, next) {
    return __awaiter(this, void 0, void 0, function* () {
        yield webHandle.getEnvModule().after(req, res);
        // 如果失败了，那么直接返回结果好了 跳过后续几个步骤
        finish(req, res, next);
    });
}
// 模块的后置调用
function finish(req, res, next) {
    if (req.responseData == undefined)
        res.status(404);
    else
        res.status(200).send(req.responseData);
    res.end();
}
//# sourceMappingURL=data:application/json;base64,