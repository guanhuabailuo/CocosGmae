"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../src");
const HttpQuest_1 = require("../lib/HttpQuest");
class LG extends src_1.LoggerMoudle {
    addTest(uid, event, name) {
        this.logEvent(uid, event, { name: name });
    }
}
let lg = new LG();
describe('日志测试', () => {
    before(function (done) {
        lg.init(src_1.LoggerMoudle.types.logkit, {
            url: "http://127.0.0.1:8199/api/logger",
            projectid: 2
        });
        done();
    });
    it('增加日志', function (done) {
        lg.addTest("123", "login", "chenkai");
        done();
    });
    it('api日志', function () {
        return __awaiter(this, void 0, void 0, function* () {
            this.timeout(5000);
            let req = lg.apiBegin("http://www.baidu.com", "get", "123");
            let v = yield HttpQuest_1.http_quest("get", "http://www.baidu.com");
            lg.apiEnd(req, true, v);
            return true;
        });
    });
    after(function (done) {
        setTimeout(function () {
            process.exit();
        }, 3000);
        done();
    });
});
//# sourceMappingURL=log.js.map